#!/bin/bash

################################################################################
# bacula.clean.volumes
################################################################################
# Warning!!! use at your own risk!!!
# When executed on a bacula-sd system, connects to the mysql catalog, then
# prune, and finally delete all volumes on the path not registered on catalog
# NOTE: you need to create a ".mylogin.cnf" file using mysql_config_editor
# MORE INFO: https://dev.mysql.com/doc/mysql-utilities/1.5/en/mysql-utils-intro-connspec-mylogin.cnf.html
################################################################################


if [ $# -gt 2 ]
then
  printf "Usage:\n\t$0 [path-to-.mylogin.cnf] [path-to-backup-volumes]\n\n"
  exit 1
fi

P=${1:-/root}
BACKUPDIR=${1:-/backups}

echo "Pruning all bacula clients on catalog (connecting via credentials in $P/.mylogin.cnf)..."

clients=$(HOME="$P" mysql --login-path=local -e'select Name from Client ORDER BY Name ASC;' bacula | tail -n+2)
if [ $? -ne 0 ]
then
  echo "Can't connect to bacula catalog...exiting"
  exit 1
fi

for client in $(echo $clients)
do
  printf "$client "
  echo "prune files client=${client} yes" | bconsole > /dev/null
done
echo

N=$(echo "list volumes" | bconsole | grep "Purged" | awk {'print $4'} | wc -l)
echo "Number of volumes to be purged: $N"

if [ $N -ne 0 ]
then
  echo Deleting volumes...
  for f in $(echo "list volume" | bconsole | grep Purged | cut -d ' ' -f6); do
    printf "$f "
    echo "delete volume=$f yes" | bconsole 2>/dev/null
    rm -rf /mnt/bacula/default/$f;
  done
  echo
fi

echo "Deleting orphan volumes in $BACKUPDIR (not in catalog)..."
cd $BACKUPDIR
for i in $(find . -maxdepth 1 -type f -printf "%f\n"); do
  echo "list volume=$i" | bconsole | if grep --quiet "No results to list"; then
        printf "$i "
        rm -f "$BACKUPDIR/$i"
  fi
done
echo
