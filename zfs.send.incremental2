#!/bin/bash

#zfs.send.incremental2
#sends the last snapshot of the selected dataset to other machine/dataset, detecting the last, common dataset previously synchronized, in order to optimize incremental transmission

if [ $# -ne 4 ]
then
  printf "\n\nUsage:\n\t$0 src-dataset ssh-priv-key dest-host dest-dataset\n\n\n"
  exit 1
fi

PREFIX=$(basename $0)
LOCALFILE=/tmp/$PREFIX.$(date +"%Y-%m-%d_%H-%M-%S").$RANDOM
REMOTEFILE=/tmp/$PREFIX.$(date +"%Y-%m-%d_%H-%M-%S").$RANDOM

sudo zfs list -t snapshot -d 1 "${1}" -H -o name -s creation | cut -f 2 -d'@' > $LOCALFILE
R1=$?
ssh -i $2 $3 "zfs list -t snapshot -d 1 ${4} -H -o name -s creation | cut -f 2 -d'@' " > $REMOTEFILE
R2=$?

if [ $R1 -ne 0 ]
then 
  printf "could't read the local snapshot list for ${1}\n"
  exit 1
fi
if [ $R2 -ne 0 ]
then 
  printf "could't read the remote snapshot list for ${1}\n"
  exit 1
fi

#don't use comm, requires sorted files. fgrep -xf instead
#LASTCOMMON=${1}@$(comm -1 -2 $LOCALFILE $REMOTEFILE |  awk -F'[ -]' '{print $4$5$6$7,$0}' | sort | tail -1 | cut -f2 -d' ')
LASTCOMMON=${1}@$(fgrep -xf $LOCALFILE $REMOTEFILE | tail -1)
LASTLOCAL=$(sudo zfs list -t snapshot -d 1 "${1}" -H -o name -s creation | tail -1 )

rm -f $LOCALFILE $REMOTEFILE

if [ -z "$LASTCOMMON" ]
then
  printf "couldn't find a common snapshot\n"
  exit 1
fi

echo Last common snapshot: $LASTCOMMON
echo Last local snapshot: $LASTLOCAL

if [ "$LASTLOCAL" == "$LASTCOMMON" ]
then
  echo Nothing to do!!!
  exit 1
fi

echo zfs send -R -i  "${LASTCOMMON}" "${LASTLOCAL}" \| pv \| ssh -i "${2}" "${3}" zfs recv -F "${4}"
 
zfs send -R -i "${LASTCOMMON}" "${LASTLOCAL}" | pv | ssh -i "${2}" "${3}" zfs recv -F "${4}"
