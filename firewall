#!/bin/bash
#
# chkconfig: - 80 20
# description: fw.router \
# Activa y desactiva funciones de cortafuegos y enrutado. Ficheros de configuracion en /etc/firewall 
# probe:true

#NOTA: este fichero deberia estar en /etc/init.d y ser activado con update-rc.d

RUTA=/etc/firewall

. $RUTA/fw.config

exec_iptables()
{
  CMD="iptables $* "
#  echo $CMD
  sh -c "$CMD"
}

vaciar()
{
#Vaciado de cadenas
$I -F
$I -X   #Borrado de las cadenas de usuario
$I -Z	#poner contadores a cero

for i in `cat /proc/net/ip_tables_names`
do
  $I -F -t $i
  $I -X -t $i
  $I -Z -t $i
done
}

start()
{
# Desactivar reenvio provisionalmente
echo 0 > /proc/sys/net/ipv4/ip_forward

#CARGA DE MODULOS - IMPORTANTE
modprobe ip_conntrack_ftp

vaciar

#Politicas por defecto aconsejables

$I -P INPUT $DEFAULT_POLICY
$I -P FORWARD $DEFAULT_POLICY
$I -P OUTPUT $DEFAULT_POLICY

$I -t nat -P PREROUTING ACCEPT
$I -t nat -P POSTROUTING ACCEPT
$I -t nat -P OUTPUT ACCEPT

$I -t mangle -P PREROUTING ACCEPT
$I -t mangle -P OUTPUT ACCEPT

#Creacion de nuevas cadenas
$I -N int	#del interior (red privada) a esta maquina linux
$I -N lin_int	#de esta maquina al interior
$I -N lin_ext	#de esta maquina al exterior
$I -N int_ext	#del interior al exterior
$I -N ext_int	#del exterior al interior
$I -N ext	#del exterior
$I -N int_int	#del interior 
$I -N synflood	
$I -N pingdeath
$I -N portscan
$I -N newnotsyn
if [ -n "$DROPLOG" ]
then
  $I -N droplog
fi

######################################################################
# Reglas generales
######################################################################
#Destinos: ACCEPT, DROP, QUEUE, RETURN

if [ -n "$NAT" ]
then
  $I -t nat -A POSTROUTING -o $EXT -j MASQUERADE
fi

#Proxy transparente HTTP (squid)
if [ ! -z "$SQUID_BOX" -a ! -z "$SQUID_BOX_PORT" -a ! -z "$SQUID_BOX_CAPTURE_PORTS" -a ! -z "$LOCAL_NETWORK" \
      -a ! -z "$IPTABLES_BOX" ]
then
  #PRIMERO: Captura de los puertos implicados y envio al proxy
  echo "configurando proxy transparente http...(PREROUTING)"
  for PUERTO in $SQUID_BOX_CAPTURE_PORTS
  do
    printf "[puerto=$PUERTO, excepciones=( "
    for BOX in $MORE_SQUID_BOXES
    do
      printf "$BOX,"
      $I -t nat -A PREROUTING -p tcp -i ! $EXT -s $BOX --dport $PUERTO -j ACCEPT
    done
    echo ")"
    $I -t nat -A PREROUTING -p tcp -i ! $EXT -s ! $SQUID_BOX \
       --dport $PUERTO -j DNAT --to $SQUID_BOX:$SQUID_BOX_PORT
  done
  echo "]"
  printf "configurando proxy transparente http...(POSTROUTING)["
  for LOCAL_N in $LOCAL_NETWORK
  do
    #SEGUNDO: Lo que salga con destino al proxy, nateado en origen
    printf "$LOCAL_N, "
    $I -t nat -A POSTROUTING -o ! $EXT -s $LOCAL_N -d $SQUID_BOX -j SNAT --to $IPTABLES_BOX
    #TERCERO: asegurar que el reenvio interior sigue operativo
    $I -A FORWARD -s $LOCAL_N -d $SQUID_BOX -i ! $EXT -o ! $EXT -p tcp --dport $SQUID_BOX_PORT -j ACCEPT
  done
  echo "]"
fi

#Proxy transparente FTP (frox)
#if [ ! -z $PROXY_FTP -a ! -z $PROXY_FTP_PORT ]
#then
#  #PRIMERO: Captura de los puertos implicados y envio al proxy
#  for PUERTO in $PROXY_FTP_CAPTURAR
#  do
#    #$I -t nat -A PREROUTING -p tcp -i ! $EXT -s ! $PROXY_FTP \
#       --dport $PUERTO -j DNAT --to-destination $PROXY_FTP:$PROXY_FTP_PORT
#    echo
#  done
#  for LOCAL_N in $LOCAL_NET
#  do
#    #SEGUNDO: Lo que salga con destino al proxy, nateado en origen
#    #$I -t nat -A POSTROUTING -o ! $EXT -s $LOCAL_N -d $PROXY_FTP -j SNAT --to $IP_PRIVADA
#    #TERCERO: asegurar que el reenvio interior sigue operativo
#    #$I -A FORWARD -s $LOCAL_N -d $PROXY_FTP -i ! $EXT -o ! $EXT -p tcp --dport $PROXY_FTP_PORT -j ACCEPT
#    echo
#  done
#fi

#Aceptar todo el trafico desde/hacia interfaz local
$I -A INPUT -i $LOC -j ACCEPT
$I -A OUTPUT -o $LOC -j ACCEPT

#
#Ataques DoS (unidades: /second, /minute, /hour o /day, o abreviaturas)
#

#anti inundacion syn (syn-flood)
$I -I INPUT 1 -p tcp --tcp-flags SYN,RST,ACK SYN  -j synflood
$I -I FORWARD 1 -p tcp --tcp-flags SYN,RST,ACK SYN  -j synflood
$I -A synflood -m limit --limit 60/s --limit-burst 150 -j RETURN
$I -A synflood -j LOG --log-level info --log-prefix "iptables:synflood:"
$I -A synflood -j DROP

#anti ping de la muerte (ping of death)
$I -I INPUT 1 -p icmp --icmp-type echo-request -j pingdeath
$I -I FORWARD 1 -p icmp --icmp-type echo-request -j pingdeath

$I -A pingdeath	-m limit --limit 10/s --limit-burst 50 -j RETURN
$I -A pingdeath -j LOG --log-level info --log-prefix "iptables:pingdeath:"
$I -A pingdeath -j DROP

#anti busqueda furtiva de puertos (port scanner)
$I -I INPUT 1 -p tcp --tcp-flags SYN,ACK,FIN,RST RST -j portscan
$I -I FORWARD 1 -p tcp --tcp-flags SYN,ACK,FIN,RST RST -j portscan

$I -A portscan -m limit --limit 60/s --limit-burst 120 -j RETURN
$I -A portscan -j LOG --log-level info --log-prefix "iptables:portscan:"
$I -A portscan -j DROP

#Controles MAC ADDR
#$I -A FORWARD -p tcp -m mac --mac-source 00:11:22:33:44:55 -j ACCEPT

#Descartar paquetes de inicio de sesion que no sean SYN, y registrar
$I -A INPUT -p tcp ! --syn -m state --state NEW -j newnotsyn
$I -A FORWARD -p tcp ! --syn -m state --state NEW -j newnotsyn
$I -A newnotsyn -j LOG --log-level info --log-prefix "iptables:Nuevo_no_syn:"
#$I -A newnotsyn -j DROP
$I -A newnotsyn -j RETURN

#Aceptar sistemas de trafico abierto
printf "Sistemas Abiertos=["
for IP in $ABIERTO
do
  printf "$IP, "
  $I -A INPUT -s $IP -j ACCEPT
  $I -A OUTPUT -d $IP -j ACCEPT
  $I -A FORWARD -s $IP -j ACCEPT
  $I -A FORWARD -d $IP -j ACCEPT
done
echo "]"

#Protocolos permitidos en todo caso
if [ -f $RUTA/fw.proto -a -r $RUTA/fw.proto ]
then 
for P in `cat $RUTA/fw.proto | sed 's/#.*$//' `
do
  PROTO=`echo $P | cut -d';' -f1`
  PUERTOO=`echo $P | cut -d';' -f2`
  PUERTOD=`echo $P | cut -d';' -f3`
  SRC=`echo $P | cut -d';' -f4`
  DST=`echo $P | cut -d';' -f5`
  if [ ! -z $PROTO ]
  then
     PROTO="-p $PROTO"
  fi
  if [ ! -z $PUERTOO ]
  then
     PUERTOO="--sport $PUERTOO"
  fi
  if [ ! -z $PUERTOD ]
  then
     PUERTOD="--dport $PUERTOD"
  fi
  if [ ! -z $SRC ]
  then
     SRC="-s $SRC"
  fi
  if [ ! -z $DST ]
  then
     DST="-d $DST"
  fi
  $I -A INPUT $PROTO $PUERTOO $PUERTOD $SRC $DST -j ACCEPT
  $I -A OUTPUT $PROTO $PUERTOO $PUERTOD $SRC $DST -j ACCEPT
  $I -A FORWARD $PROTO $PUERTOO $PUERTOD $SRC $DST -j ACCEPT
done
fi

######################################################################
# Reglas de derivacion a las subcadenas
######################################################################

#Entradas
$I -I INPUT 1 -m state --state ESTABLISHED,RELATED -j ACCEPT
$I -A INPUT -i $EXT -j ext		#Input desde el exterior
$I -A INPUT -i ! $EXT -j int		#Input desde el interior

#Salidas
$I -I OUTPUT 1 -m state --state ESTABLISHED,RELATED -j ACCEPT
$I -A OUTPUT -o $EXT -j lin_ext		#Output al exterior
$I -A OUTPUT -o ! $EXT -j lin_int	#Output al interior

#Reenvios
$I -I FORWARD 1 -m state --state ESTABLISHED,RELATED -j ACCEPT
$I -A FORWARD -i ! $EXT -o $EXT -j int_ext	#Forward desde el int al ext
$I -A FORWARD -i $EXT -o ! $EXT -j ext_int	#Forward desde el ext al int
$I -A FORWARD -i ! $EXT -o ! $EXT -j int_int	#Forward interior

######################################################################
# Entradas desde el exterior
######################################################################

if [ -n "$CHAINLOG" ]
then 
  $I -I ext -j LOG --log-level info --log-prefix "iptables_debug:ext:"
fi
if [ -f $RUTA/fw.ext -a -r $RUTA/fw.ext ]
then 
for P in `cat $RUTA/fw.ext | sed 's/#.*$//' `
do
  PROTO=`echo $P | cut -d';' -f1`
  PUERTOO=`echo $P | cut -d';' -f2`
  PUERTOD=`echo $P | cut -d';' -f3`
  SRC=`echo $P | cut -d';' -f4`
  DST=`echo $P | cut -d';' -f5`
  if [ ! -z $PROTO ]
  then
     PROTO="-p $PROTO"
  fi
  if [ ! -z $PUERTOO ]
  then
     PUERTOO="--sport $PUERTOO"
  fi
  if [ ! -z $PUERTOD ]
  then
     PUERTOD="--dport $PUERTOD"
  fi
  if [ ! -z $SRC ]
  then
     SRC="-s $SRC"
  fi
  if [ ! -z $DST ]
  then
     DST="-d $DST"
  fi
  $I -A ext $PROTO $PUERTOO $PUERTOD $SRC $DST -j ACCEPT
done
fi

######################################################################
# Entradas desde el interior
######################################################################

if [ -n "$CHAINLOG" ]
then 
  $I -I int -j LOG --log-level info --log-prefix "iptables_debug:int:"
fi
if [ -f $RUTA/fw.int -a -r $RUTA/fw.int ]
then 
for P in `cat $RUTA/fw.int | sed 's/#.*$//' `
do
  PROTO=`echo $P | cut -d';' -f1`
  PUERTOO=`echo $P | cut -d';' -f2`
  PUERTOD=`echo $P | cut -d';' -f3`
  SRC=`echo $P | cut -d';' -f4`
  DST=`echo $P | cut -d';' -f5`
  if [ ! -z $PROTO ]
  then
     PROTO="-p $PROTO"
  fi
  if [ ! -z $PUERTOO ]
  then
     PUERTOO="--sport $PUERTOO"
  fi
  if [ ! -z $PUERTOD ]
  then
     PUERTOD="--dport $PUERTOD"
  fi
  if [ ! -z $SRC ]
  then
     SRC="-s $SRC"
  fi
  if [ ! -z $DST ]
  then
     DST="-d $DST"
  fi
  $I -A int $PROTO $PUERTOO $PUERTOD $SRC $DST -j ACCEPT
done
fi

######################################################################
# Salidas hacia el interior
######################################################################

if [ -n "$CHAINLOG" ]
then 
  $I -I lin_int -j LOG --log-level info --log-prefix "iptables_debug:lin_int:"
fi
$I -A lin_int -j ACCEPT

######################################################################
# Salidas hacia el exterior
######################################################################

if [ -n "$CHAINLOG" ]
then 
  $I -I lin_ext -j LOG --log-level info --log-prefix "iptables_debug:lin_ext:"
fi
$I -A lin_ext -j ACCEPT

######################################################################
# Reenvios del interior al interior
######################################################################

if [ -f $RUTA/fw.int_int -a -r $RUTA/fw.int_int ]
then 
for P in `cat $RUTA/fw.int_int | sed 's/#.*$//' `
do
  PROTO=`echo $P | cut -d';' -f1`
  PUERTOO=`echo $P | cut -d';' -f2`
  PUERTOD=`echo $P | cut -d';' -f3`
  SRC=`echo $P | cut -d';' -f4`
  DST=`echo $P | cut -d';' -f5`
  if [ ! -z $PROTO ]
  then
     PROTO="-p $PROTO"
  fi
  if [ ! -z $PUERTOO ]
  then
     PUERTOO="--sport $PUERTOO"
  fi
  if [ ! -z $PUERTOD ]
  then
     PUERTOD="--dport $PUERTOD"
  fi
  if [ ! -z $SRC ]
  then
     SRC="-s $SRC"
  fi
  if [ ! -z $DST ]
  then
     DST="-d $DST"
  fi
  $I -A int_int $PROTO $PUERTOO $PUERTOD $SRC $DST -j ACCEPT
done
fi

if [ -n "$CHAINLOG" ]
then 
  $I -I int_int -j LOG --log-level info --log-prefix "iptables_debug:int_int:"
fi

######################################################################
# Reenvios del interior al exterior
######################################################################

if [ -f $RUTA/fw.int_ext -a -r $RUTA/fw.int_ext ]
then 
for P in `cat $RUTA/fw.int_ext | sed 's/#.*$//' `
do
  PROTO=`echo $P | cut -d';' -f1`
  PUERTOO=`echo $P | cut -d';' -f2`
  PUERTOD=`echo $P | cut -d';' -f3`
  SRC=`echo $P | cut -d';' -f4`
  DST=`echo $P | cut -d';' -f5`
  if [ ! -z $PROTO ]
  then
     PROTO="-p $PROTO"
  fi
  if [ ! -z $PUERTOO ]
  then
     PUERTOO="--sport $PUERTOO"
  fi
  if [ ! -z $PUERTOD ]
  then
     PUERTOD="--dport $PUERTOD"
  fi
  if [ ! -z $SRC ]
  then
     SRC="-s $SRC"
  fi
  if [ ! -z $DST ]
  then
     DST="-d $DST"
  fi
  $I -A int_ext $PROTO $PUERTOO $PUERTOD $SRC $DST -j ACCEPT
done
fi


if [ -n "$CHAINLOG" ]
then 
  $I -I int_ext -j LOG --log-level info --log-prefix "iptables_debug:int_ext:"
fi

######################################################################
# Reenvios del exterior al interior
######################################################################

if [ -f $RUTA/fw.ext_int -a -r $RUTA/fw.ext_int ]
then 
for P in `cat $RUTA/fw.ext_int | sed 's/#.*$//' `
do
  PROTO=`echo $P | cut -d';' -f1`
  PUERTOO=`echo $P | cut -d';' -f2`
  PUERTOD=`echo $P | cut -d';' -f3`
  SRC=`echo $P | cut -d';' -f4`
  DST=`echo $P | cut -d';' -f5`
  if [ ! -z $PROTO ]
  then
     PROTO="-p $PROTO"
  fi
  if [ ! -z $PUERTOO ]
  then
     PUERTOO="--sport $PUERTOO"
  fi
  if [ ! -z $PUERTOD ]
  then
     PUERTOD="--dport $PUERTOD"
  fi
  if [ ! -z $SRC ]
  then
     SRC="-s $SRC"
  fi
  if [ ! -z $DST ]
  then
     DST="-d $DST"
  fi
  $I -A ext_int $PROTO $PUERTOO $PUERTOD $SRC $DST -j ACCEPT
done
fi

if [ -n "$CHAINLOG" ]
then 
  $I -I ext_int -j LOG --log-level info --log-prefix "iptables_debug:ext_int:"
fi

######################################################################
# Reglas finales
######################################################################

if [ -n "$DROPLOG" ]
then
  $I -A INPUT -j droplog
  $I -A FORWARD -j droplog
  $I -A OUTPUT -j droplog
  $I -A droplog -j LOG --log-level info --log-prefix "iptables:no_aceptado:"
fi

######################################################################
# Otras Reglas
######################################################################
if [ -f $RUTA/fw.portforwarding -a -r $RUTA/fw.portforwarding ]
then 
for P in `cat $RUTA/fw.portforwarding | sed 's/#.*$//' `
do
  PROTO=`echo $P | cut -d';' -f1`
  PUERTO=`echo $P | cut -d';' -f2`
  IP_DST=`echo $P | cut -d';' -f3`
  PUERTO_DST=`echo $P | cut -d';' -f4`
  #echo $PROTO $PUERTO $IP_DST $PUERTO_DST
  $I -t nat -A PREROUTING -p $PROTO -i $EXT -d $IP_PUBLICA --dport $PUERTO -j DNAT --to-destination $IP_DST:$PUERTO_DST 
done
fi

# Activar reenvio 
echo 1 > /proc/sys/net/ipv4/ip_forward
# Evitar ataques smurf
echo 1 > /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts
# No aceptar enrutamiento en origen
echo 0 > /proc/sys/net/ipv4/conf/all/accept_source_route
# anti ip spoofing
echo 1 > /proc/sys/net/ipv4/conf/default/rp_filter
echo 1 > /proc/sys/net/ipv4/conf/all/rp_filter
echo IP_PUBLICA=$IP_PUBLICA \( $EXT \)
echo NAT=$NAT
}



stop()
{
vaciar
$I -P INPUT ACCEPT
$I -P FORWARD ACCEPT
$I -P OUTPUT ACCEPT
if [ $NAT ]
then
  $I -t nat -A POSTROUTING -o $EXT -j MASQUERADE
fi
}




PATH=/sbin:/usr/local/sbin:$PATH
I=exec_iptables
if [ $# -eq 0 ]
then
  echo "$0 {start | stop | restart | status}"
  exit 1
else
  case "$1" in
    start) start
    ;;
    stop)  stop
    ;;
    restart)
    	stop
	start
    ;;
    status)
	echo "TABLE filter ----------------------------------------------"
	$I --list -n -v -t filter
	echo "TABLE nat -------------------------------------------------"
	$I --list -n -v -t nat
    ;;
  esac
fi

