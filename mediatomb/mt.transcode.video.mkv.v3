#!/bin/bash
#
# mkvtom2ts.sh - a simple wrapper around the tsmuxeR
# Creates a m2ts from a "standard" mkv (assuming video is MPEG4, and sound is AC3 or DTS)
#
# Original script by: http://sticky123.blogspot.com/
#
# Features from v0.4 added by: rasmus@akvaservice.dk
#
# This script needs the following tools to work:
#
# tsMuxer: http://www.videohelp.com/tools/tsMuxeR 
# mkvtoolnix: http://www.videohelp.com/tools/MKVtoolnix
# dcadec: http://www.videolan.org/developers/libdca.html
# aften: http://aften.sourceforge.net/
# zenity: http://live.gnome.org/Zenity
#
#
# v0.1 : initial version
# v0.2 : added DTS support
# v0.3 : changed to tsmuxer linux version + added multiple audio lang support
# v0.4 : added option to use tsmuxer linux or win32 version. Linux version og tsmuxer seams for now to have problems with PS3
# v0.5 : added option to use temp folder. This would speedup muxing if temp is located on another physical drive.
# v0.6 : added Zentiy progress window. 

# Usage: mkv2m2ts filename.mkv

# Options
# esl/spa	SPANISH
# eng		ENGLISH
# fra/fre	FRENCH
# und		INDETERMINADO

AUDIO_LANGS="eng und esl spa fra fre"
USETEMPFOLDER="yes"
USEWIN32TSMUXER="yes"
TEMPFOLDER="/tmp"

# Need a randomstring
string=$( echo "$1$$" | md5sum | md5sum )
randstring="${string:0:30}"

# Get filename and path
BASENAME=$(basename "$1" .mkv)
DIRNAME=$(dirname "$1")
DEST_FILE="$DIRNAME/$BASENAME.m2ts"

# Set tempfolder
if [ "$USETEMPFOLDER" == "no"  ]
then
	TEMPFOLDER=$DIRNAME
fi

# Some other stuff, needs cleaning
WINDOWTITLE="mkv2m2ts.sh"
VIDEOMPEG4="$TEMPFOLDER/$randstring.mpeg4"
AUDIOAC3="$TEMPFOLDER/$randstring.ac3"
AUDIODTS="$TEMPFOLDER/$randstring.dts"

MUXMETA="$TEMPFOLDER/$randstring.muxmeta"
DEMUXLOG="$TEMPFOLDER/$randstring.demuxlog"
REMUXLOG="$TEMPFOLDER/$randstring.remuxlog"
TRANSCODELOG="$TEMPFOLDER/$randstring.transcodelog"

DURATION="0"

DemuxProgress() 
{
	sleep 0.5
	while ps | grep "$pid " >/dev/null
	do
		PERCENTDONE=`tail -c 90 "$DEMUXLOG" | sed 's/.*gress://g' | sed 's/\%//'`
		if [ "$PERCENTDONE" == "100"  ]
		then
			PERCENTDONE="99"
		fi
		echo $PERCENTDONE
		echo "# $BASENAME\nDemuxing A/V..."
		sleep 1
	done
	echo 99
}

TransCodeProgress() 
{
	sleep 0.5
	PERCENTDONE="0"
	TOTALFRAMES=`echo "$DURATION * 32" | bc`
	echo "0"

	while ps | grep "$pid " >/dev/null
	do
		FRAMESCOMPLETED=`tail -c 90 "$TRANSCODELOG" | grep frame: | awk '{ print $2}'`
		PERCENTDONE=`echo "100 * $FRAMESCOMPLETED/$TOTALFRAMES" | bc`
		if [ "$PERCENTDONE" == "100" ]
		then
			PERCENTDONE="99"
		fi
		echo "$PERCENTDONE"
		echo "# $BASENAME\nTranscoding DTS to AC3..."
		sleep 1
	done
	echo 99
}

RemuxProgress() 
{
	sleep 0.5
	PERCENTDONE="0"
	echo "0"

	while ps | grep "$pid " >/dev/null
	do
		PERCENTDONE=`tail -c 20 "$REMUXLOG" | grep '% complete' | awk '{ print $1 }' | sed 's/\..*//'` 

		if [ "$PERCENTDONE" == "100" ]
		then
			PERCENTDONE="99"
		fi
		echo "$PERCENTDONE"
		echo "# $BASENAME\nRemuxing A/V"
		sleep 1
	done
	echo 99
}

CleanUp()
{
	echo 0
	echo "# $BASENAME\nCleaning up..."
	rm -f "$MUXMETA"
	echo 15
	rm -f "$VIDEOMPEG4"
	echo 30
	rm -f "$AUDIOAC3"
	echo 45
	rm -f "$AUDIODTS"
	echo 70
	rm -f "$DEMUXLOG"
	echo 90
	rm -f "$REMUXLOG"
	echo 95
	rm -f "$TRANSCODELOG"
	sleep 3
	echo "# $BASENAME\nDone"
}

# Extract MKV info
MPEG4_TRACK_NO=`mkvinfo "$1" | grep V_MPEG4/ISO/AVC -B10 | grep Track\ number\:\ | awk '{ print $5 }'`
DURATION=`mkvinfo "$1" | grep Duration | awk '{ print $4 }' | sed 's/\..*//'`

for AUDIO_LANG in $AUDIO_LANGS
do
	AC3_TRACK_NO=`mkvinfo "$1" | grep A_AC3 -B10 -C3 | grep Language\:\ $AUDIO_LANG -B13 | grep Track\ number\:\ | awk '{ print $5 }'`
	DTS_TRACK_NO=`mkvinfo "$1" | grep A_DTS -B10 -C3 | grep Language\:\ $AUDIO_LANG -B13 | grep Track\ number\:\ | awk '{ print $5 }'`

	if [ -n "$AC3_TRACK_NO" -o -n "$DTS_TRACK_NO" ]
	then
		break
	fi	
done

# Do some stuff
(
	if [[ $AC3_TRACK_NO -gt "0" ]]
	then
		# Demux A/V
		mkvextract tracks "$1" $AC3_TRACK_NO:"$AUDIOAC3" $MPEG4_TRACK_NO:"$VIDEOMPEG4" > "$DEMUXLOG" & pid=$!
		DemuxProgress
	else		
		if [[ $DTS_TRACK_NO -gt "0" ]]
		then
			# Demux A/V
			mkvextract tracks "$1" $DTS_TRACK_NO:"$AUDIODTS" $MPEG4_TRACK_NO:"$VIDEOMPEG4" > "$DEMUXLOG" & pid=$!
			DemuxProgress			

			# Transcode DTS to AC3
			dcadec -r -o wavall "$AUDIODTS" | aften -b 640 -v 2 -readtoeof 1 - "$AUDIOAC3" >"$TRANSCODELOG" 2>&1 & pid=$!
			TransCodeProgress
		else
			# If no AC3 or DTS tracks found, we fail.
			zenity 	--info \
				--title="$WINDOWTITLE" \
				--text="No AC3 or DTS audio tracks found!" \
				--width=450 --height=100 \
			exit
		fi  
	fi

	# Remux A/V
	echo "MUXOPT --no-pcr-on-video-pid --new-audio-pes --vbr" >>$MUXMETA
	echo "V_MPEG4/ISO/AVC, "$VIDEOMPEG4", level=4.1, insertSEI, contSPS, track=1, lang=eng" >>$MUXMETA
	echo "A_AC3, "$AUDIOAC3", track=1, lang=eng" >>$MUXMETA
	
		
	if [ "$USEWIN32TSMUXER" == "no"  ]
	then
		tsMuxeR "$MUXMETA" "$DEST_FILE" 2>&1 > "$REMUXLOG" & pid=$!
		
	else	
		tsMuxeR.exe "$MUXMETA" "$DEST_FILE" 2>&1 > "$REMUXLOG" & pid=$!
	fi
	RemuxProgress

	# All done, lets cleanup.	
	CleanUp
) |
zenity 	--progress \
	--title="$WINDOWTITLE" \
	--text="" \
	--width=450 --height=100 \
	--percentage=0

if [ "$?" = 1 ] 
then	
	kill $pid
	CleanUp
	exit
fi
